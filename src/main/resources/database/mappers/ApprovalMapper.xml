<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.vet.main.approval.ApprovalDAO">

	<sql id="forPager">
		<choose>
			<when test="kind=='apTitle'">
				APTITLE
			</when>
			<when test="kind=='apContents'">
				APCONTENTS
			</when>
			<otherwise>
				APKIND
			</otherwise>
		</choose>
	</sql>
	
	<!-- emp resultMap -->
	<resultMap type="com.vet.main.emp.EmpVO" id="userMap">
		<id column="USERNAME" property="username"/>
			<result column="PASSWORD" property="password"/>
			<result column="EMPNAME" property="empName"/>
			<result column="EMAIL" property="email"/>
			<result column="PHONE" property="phone"/>
			<result column="HIREDATE" property="hireDate"/>
			<result column="RANDOMPW" property="randomPw"/>
			<result column="FILENAME" property="fileName"/>
			<result column="ORIGINALFILENAME" property="originalFileName"/>
			<result column="STATE" property="state"/>
			<result column="POSITIONNO" property="positionNo"/>
			<result column="DEPTNO" property="deptNo"/>
			<result column="BIRTH" property="birth"/>
			<result column="RANDOMPW" property="randomPw"/>
	</resultMap>

	<!-- 결재선 -->
	<resultMap type="ApprovalLineVO" id="apLineMap">
		<id column="APNO" property="apNo"/>
			<result column="USERNAME" property="username"/>
			<result column="EMPNAME" property="empName"/>
			<result column="APCONFIRMSTATE" property="apConfirmState"/>
			<result column="APCONFIRMDATE" property="apConfirmDate"/>
			<result column="APLSTEP" property="aplStep"/>
	</resultMap>

	
	<!-- 지출결의서 상세페이지 -->
	<resultMap type="ApprovalVO" id="getExpenseResult">
		<id column="APNO" property="apNo"/>
			<result column="USERNAME" property="username"/>
			<result column="APFORMATNO" property="apFormatNo"/>
			<result column="APTITLE" property="apTitle"/>
			<result column="APCDATE" property="apCDate"/>
			<result column="APUDATE" property="apUDate"/>
			<result column="APSTATE" property="apState"/>
			<result column="APREJECTION" property="apRejection"/>
			<result column="APKIND" property="apKind"/>
			<result column="EMPNAME" property="empName"/>
			<result column="POSITIONNAME" property="positionName"/>
			<result column="DEPTNAME" property="deptName"/>
			<result column="PRICESUM" property="priceSum"/>
		<collection property="expenseList" javaType="List" ofType="ApprovalExpenseVO">
			<result column="EXPENSENAME" property="expenseName"/>
			<result column="EXPENSEPRICE" property="expensePrice"/>
			<result column="EXPENSEAMOUNT" property="expenseAmount"/>
			<result column="EXPENSEBIGO" property="expenseBigo"/>
			<result column="EXPENSENO" property="expenseNo"/>
		</collection>
		<collection property="apLineList" resultMap="apLineMap" />
	</resultMap>
	
	<!-- 기안 상세페이지 -->
	<resultMap type="ApprovalVO" id="getApDetailResult">
		<id column="APNO" property="apNo"/>
			<result column="USERNAME" property="username"/>
			<result column="APFORMATNO" property="apFormatNo"/>
			<result column="APTITLE" property="apTitle"/>
			<result column="APCDATE" property="apCDate"/>
			<result column="APUDATE" property="apUDate"/>
			<result column="DAYOFFSTARTDATE" property="dayoffStartDate"/>
			<result column="DAYOFFENDDATE" property="dayoffEndDate"/>
			<result column="APCONTENTS" property="apContents"/>
			<result column="APSTATE" property="apState"/>
			<result column="APREJECTION" property="apRejection"/>
			<result column="DAYOFFKIND" property="dayoffKind"/>
			<result column="DAYOFFTIME" property="dayoffTime"/>
			<result column="DAYOFFSELECTTIME" property="dayoffSelectTime"/>
			<result column="APKIND" property="apKind"/>
			<result column="EMPNAME" property="empName"/>
			<result column="POSITIONNAME" property="positionName"/>
			<result column="DEPTNAME" property="deptName"/>
	</resultMap>

	<resultMap type="EmpVO" id="getApEmpList">
		<id column="USERNAME" property="username"/>
			<result column="DEPTNAME" property="deptName"/>
			<result column="POSITIONNAME" property="positionName"/>
			<result column="EMPNAME" property="empName"/>
	</resultMap>
	
  	<select id="getApUser" parameterType="com.vet.main.emp.EmpVO" resultMap="userMap">
  		SELECT E.*, P.*, D.* 
		FROM EMP E INNER JOIN POSITION P 
			ON E.POSITIONNO=P.POSITIONNO 
			INNER JOIN DEPARTMENT D 
			ON E.DEPTNO=D.DEPTNO
		WHERE E.USERNAME=#{username}
  	</select>

	<!-- 품의서 작성 -->
	<insert id="setApPoomAdd" parameterType="ApprovalVO">
		<selectKey keyProperty="apNo" resultType="Long" order="BEFORE">
	        SELECT NEXTVAL(APNO_SEQ) FROM DUAL
		</selectKey>
		
		INSERT INTO APPROVAL
		(APNO, USERNAME, APFORMATNO, APTITLE, APCDATE, APCONTENTS, APSTATE, APREJECTION, APKIND, EMPNAME, POSITIONNAME, DEPTNAME)
		VALUES
		(#{apNo}, #{username}, 25, #{apTitle}, NOW(), #{apContents}, '결재대기중', '', '품의서', #{empName}, #{positionName}, #{deptName})
	</insert>
	
	<!-- 휴가신청서 작성 -->
	<insert id="setApDayoffAdd" parameterType="ApprovalVO">
		<selectKey keyProperty="apNo" resultType="Long" order="BEFORE">
	        SELECT NEXTVAL(APNO_SEQ) FROM DUAL
		</selectKey>
		
		INSERT INTO APPROVAL
		(APNO, USERNAME, APFORMATNO, APTITLE, APCDATE, DAYOFFSTARTDATE, DAYOFFENDDATE,
		APCONTENTS, APSTATE, APREJECTION, DAYOFFKIND, DAYOFFTIME, DAYOFFSELECTDATE,
		APKIND, EMPNAME, POSITIONNAME, DEPTNAME)
		VALUES
		(#{apNo}, #{username}, 27, #{apTitle}, NOW(), #{dayoffStartDate}, #{dayoffEndDate},
		#{apContents}, '결재대기중', '', #{dayoffKind}, #{dayoffTime}, #{dayoffSelectDate},'휴가신청서',
		#{empName}, #{positionName}, #{deptName})
	</insert>
	
	<!-- 휴직신청서 작성 -->
	<insert id="setApVacationAdd" parameterType="ApprovalVO">
		<selectKey keyProperty="apNo" resultType="Long" order="BEFORE">
	        SELECT NEXTVAL(APNO_SEQ) FROM DUAL
		</selectKey>
		
		INSERT INTO APPROVAL
		(APNO, USERNAME, APFORMATNO, APTITLE, APCDATE, APCONTENTS, APSTATE, APREJECTION, APKIND, EMPNAME, POSITIONNAME, DEPTNAME)
		VALUES
		(#{apNo}, #{username}, 28, #{apTitle}, NOW(), #{apContents}, '결재대기중', '', '휴직신청서', #{empName}, #{positionName}, #{deptName})
	</insert>
	
	<!-- 퇴직신청서 작성 -->
	<insert id="setApRetireAdd" parameterType="ApprovalVO">
		<selectKey keyProperty="apNo" resultType="Long" order="BEFORE">
	        SELECT NEXTVAL(APNO_SEQ) FROM DUAL
		</selectKey>
		
		INSERT INTO APPROVAL
		(APNO, USERNAME, APFORMATNO, APTITLE, APCDATE, APCONTENTS, APSTATE, APREJECTION, APKIND, EMPNAME, POSITIONNAME, DEPTNAME)
		VALUES
		(#{apNo}, #{username}, 29, #{apTitle}, NOW(), #{apContents}, '결재대기중', '', '퇴직신청서', #{empName}, #{positionName}, #{deptName})
	</insert>
	
	<!-- 지출결의서 작성 -->
	<insert id="setApExpenseAdd" parameterType="ApprovalVO">
		<selectKey keyProperty="apNo" resultType="Long" order="BEFORE">
	        SELECT NEXTVAL(APNO_SEQ) FROM DUAL
		</selectKey>
		
		INSERT INTO APPROVAL
		(APNO, USERNAME, APFORMATNO, APTITLE, APCDATE, APSTATE, APREJECTION, APKIND, EMPNAME, POSITIONNAME, DEPTNAME)
		VALUES
		(#{apNo}, #{username}, 26, #{apTitle}, NOW(), '결재대기중', '', '지출결의서', #{empName}, #{positionName}, #{deptName})
	</insert>
	
	<!-- 기안서 상세 -->
	<select id="getApDetail" parameterType="ApprovalVO" resultMap="getApDetailResult">
		SELECT A.*, S.*
		FROM APPROVAL A INNER JOIN SIGNFILE S
		ON A.USERNAME = S.USERNAME
		WHERE A.APNO = #{apNo}
	</select>
	
	<!-- 지출항목 추가 -->
	<insert id="setExpenseAdd" parameterType="ApprovalExpenseVO">
		INSERT INTO APEXPENSE
			(APNO, EXPENSENAME, EXPENSEAMOUNT, EXPENSEPRICE, EXPENSEBIGO)
		VALUES
            (#{apNo}, #{expenseName}, #{expenseAmount}, #{expensePrice}, #{expenseBigo})
        ON DUPLICATE KEY UPDATE
        	APNO = #{apNo} AND EXPENSENAME = #{expenseName}
	</insert>
	
  	<!-- 수정페이지에서 지출항목 삭제 -->
  	<delete id="setExpenseDelete" parameterType="ApprovalExpenseVO">
  		DELETE FROM APEXPENSE
  		WHERE
  		APNO = #{apNo}
  		AND EXPENSENO = #{expenseNo}
  	</delete>
	
	<!-- 지출결의서 상세 -->
	<select id="getApExpenseDetail" parameterType="ApprovalVO" resultMap="getExpenseResult">
		SELECT A.*, AE.*,
				(SELECT SUM(EXPENSEPRICE) FROM APEXPENSE
				 WHERE APNO = A.APNO) AS PRICESUM
		FROM
			APPROVAL A LEFT OUTER JOIN APEXPENSE AE
			ON A.APNO = AE.APNO
		WHERE A.APNO = #{apNo};
	</select>
	
	<!-- 부서명으로 사원조회 -->
  	<select id="getDeptEmp" parameterType="String" resultMap="userMap">
  		SELECT E.*, P.*, D.* 
		FROM EMP E INNER JOIN POSITION P 
			ON E.POSITIONNO=P.POSITIONNO 
			INNER JOIN DEPARTMENT D 
			ON E.DEPTNO=D.DEPTNO
		WHERE P.DEPTNAME = #{deptName}
  	</select>


	<!-- 기안함 -->
	<select id="getDraftList" parameterType="Pager" resultType="ApprovalVO">
		SELECT A.*, E.USERNAME, E.EMPNAME, D.DEPTNAME
			FROM APPROVAL A INNER JOIN EMP E
			ON A.USERNAME = E.USERNAME
			INNER JOIN DEPARTMENT D
			ON E.DEPTNO = D.DEPTNO
		WHERE E.USERNAME = #{username}
		  AND <include refid="forPager"></include>
		 LIKE CONCAT('%', #{search}, '%')
		ORDER BY A.APNO DESC
		LIMIT #{startRow}, #{lastRow}
	</select>
	
	<!-- 결재함  -->
	<select id="getApproverList" parameterType="Pager" resultType="ApprovalVO">
		SELECT A.*, E.USERNAME, E.EMPNAME, D.DEPTNAME
			FROM APPROVAL A INNER JOIN EMP E
			ON A.USERNAME = E.USERNAME
			INNER JOIN DEPARTMENT D
			ON E.DEPTNO = D.DEPTNO
			INNER JOIN APLINE APL
			ON A.APNO = APL.APNO
		WHERE APL.USERNAME = #{username}
		  AND <include refid="forPager"></include>
		 LIKE CONCAT('%', #{search}, '%')
		ORDER BY A.APNO DESC
		LIMIT #{startRow}, #{lastRow}
	</select>
	
	<!-- pager 관련 (해당 유저 기안함의 총 게시글 수를 구하기 위함) -->
	<select id="getDraftTotal" parameterType="Pager" resultType="Long">
		<bind name="pattern" value="'%' +_parameter.getSearch() + '%'"/>
		SELECT COUNT(APNO) FROM APPROVAL
		WHERE USERNAME = #{username}
		  AND <include refid="forPager"></include>
		 LIKE #{pattern}
	</select>
	
	<!-- pager 관련 (해당 유저에게 전달된 결재의 총 수를 구하기 위함) -->
	<select id="getApproverTotal" parameterType="Pager" resultType="Long">
		<bind name="pattern" value="'%' +_parameter.getSearch() + '%'"/>
		SELECT COUNT(A.APNO)
		FROM APPROVAL A INNER JOIN APLINE APL
		  ON A.APNO = APL.APNO
		WHERE APL.USERNAME = #{username}
		  AND <include refid="forPager"></include>
		 LIKE #{pattern}
	</select>
	
	<delete id="setApDelete" parameterType="ApprovalVO">
		DELETE FROM APPROVAL
		WHERE APNO = #{apNo}
	</delete>
	
	<update id="setApUpdate" parameterType="ApprovalVO">
		UPDATE APPROVAL
		SET APTITLE = #{apTitle},
			APCONTENTS = #{apContents}
		WHERE APNO = #{apNo}
	</update>
	
	<update id="setDayoffUpdate" parameterType="ApprovalVO">
		UPDATE APPROVAL
		SET APTITLE = #{apTitle},
			DAYOFFSTARTDATE = #{dayoffStartDate},
			DAYOFFENDDATE = #{dayoffEndDate},
			APCONTENTS = #{apContents}
		WHERE APNO = #{apNo}
	</update>
	
	<update id="setExpenseUpdate" parameterType="ApprovalExpenseVO">
		UPDATE APEXPENSE
		SET
		EXPENSENAME = #{expenseName},
		EXPENSEPRICE = #{expensePrice},
		EXPENSEAMOUNT = #{expenseAmount},
		EXPENSEBIGO = #{expenseBigo}
		WHERE EXPENSENO = #{expenseNo}
	</update>
	
	<insert id="setApExpenseUpdate" parameterType="ApprovalVO">
		UPDATE APPROVAL
		SET APTITLE = #{apTitle}
		WHERE APNO = #{apNo}
	</insert>
			
	<!-- ************ FILE ************ -->
	<insert id="setApFileAdd" parameterType="ApprovalFileVO">
		INSERT INTO APFILE
		VALUES (NULL, #{apNo}, #{fileName}, #{originalFileName})
	</insert>
	
	<select id="getApFileDetail" parameterType="FileVO" resultType="ApprovalFileVO">
		SELECT * FROM APFILE
		WHERE FILENO = #{fileNo}
	</select>
	
	
	<!-- 모든 부서 -->
	<select id="selectDept" parameterType="DeptVO" resultType="EmpVO">
		SELECT E.*, D.DEPTNAME
		FROM DEPARTMENT D INNER JOIN EMP E
		ON D.DEPTNO = E.DEPTNO
		WHERE D.DEPTNAME = #{deptName}
	</select>
		
	<!-- 결재선 설정에 부서별 직원 리스트 출력 -->
	<select id="getEmpSelectList" parameterType="String" resultMap="getApEmpList">
		SELECT D.DEPTNAME, P.POSITIONNAME, E.EMPNAME, E.USERNAME
		FROM EMP E INNER JOIN DEPARTMENT D
		ON E.DEPTNO = D.DEPTNO
		INNER JOIN POSITION P
		ON E.POSITIONNO = P.POSITIONNO
		WHERE D.DEPTNAME = #{deptName};	
	</select>
	
	<!-- 결재선 설정에 부서별 직원 리스트 출력 (대표원장) -->
	<select id="getPositionEmp" parameterType="String" resultMap="getApEmpList">
		SELECT D.DEPTNAME, P.POSITIONNAME, E.EMPNAME, E.USERNAME
		FROM EMP E INNER JOIN DEPARTMENT D
		ON E.DEPTNO = D.DEPTNO
		INNER JOIN POSITION P
		ON E.POSITIONNO = P.POSITIONNO
		WHERE P.POSITIONNAME = #{positionName};	
	</select>
	
	<!-- 결재선 설정 -->
	<insert id="setApLine" parameterType="ApprovalLineVO">
		INSERT INTO APLINE
		(APNO, USERNAME, EMPNAME, APCONFIRMSTATE, APCONFIRMDATE, APLSTEP)
		VALUES
		(#{apNo}, #{username}, #{empName}, '0', #{apConfirmDate}, #{aplStep})
	</insert>
	
	<!-- 결재선 수정 -->
	<delete id="resetApLine" parameterType="Long">
		DELETE FROM APLINE
		WHERE APNO = #{apNo}
	</delete>

	<!-- 상세페이지에 결재자 출력-->
	<select id="getApLinePerson" parameterType="Long" resultType="ApprovalLineVO">
		SELECT APL.*, P.POSITIONNAME, S.*
		FROM APLINE APL INNER JOIN EMP E
			ON APL.USERNAME = E.USERNAME
			INNER JOIN POSITION P
			ON P.POSITIONNO = E.POSITIONNO
			LEFT OUTER JOIN SIGNFILE S
			ON APL.USERNAME = S.USERNAME
		WHERE APL.APNO = #{apNo}
		ORDER BY APL.APLSTEP ASC
	</select>
	
	<!-- 도장 조회 -->
	<select id="getApSign" parameterType="ApprovalLineVO">
		SELECT APL.*, S.*
		FROM APLINE APL INNER JOIN SIGNFILE S
		ON APL.USERNAME = S.USERNAME
		WHERE APL.USERNAME = #{username}
	</select>
	
	<!-- 결재자 수와 결재가 남았는지 확인 -->
	<select id="getApprovalState" parameterType="Long" resultType="ApprovalLineVO">
		SELECT (SELECT COUNT(USERNAME)
				FROM APLINE
				WHERE APNO = #{apNo}) AS APLCOUNT,
			   (SELECT COUNT(USERNAME)
				FROM APLINE
				WHERE APNO = #{apNo}
				AND APCONFIRMSTATE = 0) AS NOTSIGN
		FROM APLINE
		WHERE APNO = #{apNo}
		LIMIT 1;
	</select>
	
	<!-- 반려 시 기안테이블 업데이트 -->
	<update id="rejectApprove01" parameterType="ApprovalVO">
		UPDATE APPROVAL
		SET
		APSTATE = #{apState},
		APREJECTION = #{apRejection}
		WHERE APNO = #{apNo}
	</update>

	<!-- 결재상태 업데이트 01 (결재대기 / 결재진행) -->
	<update id="setApState" parameterType="ApprovalVO">
		UPDATE APPROVAL
		SET
		APSTATE = #{apState}
		WHERE APNO = #{apNo}
	</update>
	
	<!-- 결재상태 업데이트 02 (결재자 정보) (반려포함) -->
	<update id="setApprover" parameterType="ApprovalLineVO">
		UPDATE APLINE
		SET
		APCONFIRMSTATE = #{apConfirmState},
		APCONFIRMDATE = NOW()
		WHERE APNO = #{apNo}
		AND USERNAME = #{username}
	</update>
</mapper>