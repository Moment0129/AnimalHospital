<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.vet.main.dept.DeptDAO">

	<sql id="forPager">
	  	<choose>
	  		<when test="kind == 'empName'">
	  			empName
	  		</when>
	  		<when test="kind == 'deptName'">
	  			deptName
	  		</when>
	  		<otherwise>
	 			positionName
	  		</otherwise>
	  	</choose>
	  </sql>
	
	<select id="getTotal" parameterType="Pager" resultType="Long">
	  	<bind name="pattern" value="'%'+_parameter.getSearch()+'%'"/>
	  	SELECT COUNT(E.USERNAME) FROM EMP E INNER JOIN DEPARTMENT D ON E.DEPTNO = D.DEPTNO INNER JOIN POSITION P ON E.POSITIONNO = P.POSITIONNO
	  		WHERE E.DEPTNO != 0 AND <include refid="forPager"></include>
	  		Like #{pattern}
	  </select>

	<select id="getTotal2" parameterType="com.vet.main.commons.DeptPager" resultType="Long">
	  	<bind name="pattern" value="'%'+_parameter.getSearch()+'%'"/>
	  	SELECT COUNT(E.USERNAME) FROM EMP E INNER JOIN DEPARTMENT D ON E.DEPTNO = D.DEPTNO INNER JOIN POSITION P ON E.POSITIONNO = P.POSITIONNO
	  		WHERE E.DEPTNO = #{deptNo} AND <include refid="forPager"></include>
	  		Like #{pattern}
	  </select>

	
	<select id="getEmpList" parameterType="com.vet.main.dept.DeptVO" resultMap="getDetailResult">
		SELECT * 
		FROM EMP E INNER JOIN DEPARTMENT D
		ON E.DEPTNO = D.DEPTNO
		INNER JOIN POSITION P
		ON E.POSITIONNO = P.POSITIONNO
		WHERE E.DEPTNO != 0 AND
		<include refid="forPager"></include>
			LIKE CONCAT('%', #{search}, '%')
			ORDER BY E.USERNAME DESC
			LIMIT #{startRow}, #{perPage}
	</select>
	
	<select id="detailEmp" parameterType="com.vet.main.dept.DeptVO" resultMap="getDetailResult">
		SELECT * 
		FROM EMP E INNER JOIN DEPARTMENT D
		ON E.DEPTNO = D.DEPTNO
		INNER JOIN POSITION P
		ON E.POSITIONNO = P.POSITIONNO
		WHERE E.DEPTNO = #{deptNo} OR E.DEPTNO = #{parentNo}
	</select>
	
	<select id="deptList" parameterType="com.vet.main.dept.DeptVO">
	
		WITH RECURSIVE DEPTLIST AS (
	    SELECT DEPTNO, DEPTNAME, PARENTNO, DEPTH
	    FROM DEPARTMENT
	    WHERE PARENTNO IS NULL
	
	    UNION ALL
	
	    SELECT d.DEPTNO, d.DEPTNAME, d.PARENTNO, dh.DEPTH + 1
	    FROM DEPARTMENT d
	    INNER JOIN DEPTLIST dh ON d.PARENTNO = dh.DEPTNO
		)
		SELECT * FROM DEPTLIST ORDER BY DEPTNO ASC
	
	</select>
	
	<select id="selectDept" parameterType="com.vet.main.dept.DeptVO">
		SELECT * FROM DEPARTMENT WHERE PARENTNO=0 and DEPTNO != 999 and DEPTNO != 100
	</select>
			
	<select id="deptPosition" parameterType="com.vet.main.dept.DeptVO">
		SELECT P.POSITIONNO, P.POSITIONNAME FROM DEPARTMENT D INNER JOIN POSITION P ON D.DEPTNO = P.DEPTNO WHERE D.DEPTNO=#{deptNo}
	</select>
	
	<select id="positionList" parameterType="com.vet.main.dept.DeptVO">
	
		SELECT * 
		FROM POSITION P INNER JOIN DEPARTMENT D
		ON P.DEPTNO = D.DEPTNO
	
	</select>
	
	<resultMap type="com.vet.main.dept.DeptVO" id="getDetailResult">
		<id column="USERNAME" property="username"/>
		<result column="PASSWORD" property="password"/>
		<result column="EMPNAME" property="empName"/>
		<result column="EMAIL" property="email"/>
		<result column="PHONE" property="phone"/>
		<result column="HIREDATE" property="hireDate"/>
		<result column="STATE" property="state"/>
		<result column="POSITIONNO" property="positionNo"/>
		<result column="DEPTNO" property="deptNo"/>
		<result column="BIRTH" property="birth"/>
	</resultMap>

	<insert id="deptAdd" parameterType="com.vet.main.dept.DeptVO">	
	<selectKey keyProperty="deptNo" resultType="string" order="BEFORE">
		select NEXTVAL(dept_seq) from dual
	</selectKey>
		INSERT INTO DEPARTMENT
		VALUES (#{deptNo}, #{deptName}, #{parentNo}, #{depth})
	</insert>

	<update id="deptUpdate" parameterType="com.vet.main.dept.DeptVO">
	    UPDATE DEPARTMENT
	    SET
	    DEPTNO = #{deptNo},
	    DEPTNAME = #{deptName},
	    PARENTNO = #{parentNo}
	    WHERE DEPTNO = #{deptNo}
	</update>

	<delete id="deptDelete" parameterType="com.vet.main.dept.DeptVO">
		DELETE FROM DEPARTMENT
		WHERE DEPTNO = #{deptNo}
	</delete>
	
	
	<!-- 결재선 설정 시 조회되는 부서목록 -->
	<select id="getApLineDept" parameterType="com.vet.main.dept.DeptVO">
		WITH RECURSIVE DEPTLIST AS (
		SELECT DEPTNO, DEPTNAME, PARENTNO, DEPTH
		FROM DEPARTMENT
		WHERE PARENTNO IS NULL
		
		UNION ALL
		
		SELECT d.DEPTNO, d.DEPTNAME, d.PARENTNO, dh.DEPTH + 1
		FROM DEPARTMENT d
		INNER JOIN DEPTLIST dh ON d.PARENTNO = dh.DEPTNO
		)
		SELECT * FROM DEPTLIST
		WHERE DEPTNO != '999'
		ORDER BY DEPTNO ASC;
	</select>
	
	<select id="selectApLineDept" parameterType="com.vet.main.dept.DeptVO">
		SELECT * FROM DEPARTMENT
		WHERE PARENTNO=0 and DEPTNO != 999 and DEPTNO != 100
	</select>

	<select id="deptDetail" parameterType="com.vet.main.dept.DeptVO">
		SELECT *
		FROM DEPARTMENT
		WHERE DEPTNO = #{deptNo}
	</select>


</mapper>