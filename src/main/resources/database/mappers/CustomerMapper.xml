<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

	<mapper namespace="com.vet.main.customer.CustomerDAO">
		<sql id="forPager">
	  		<choose>
	  			<when test="kind == 'animalName'">
	  				animalName
	  			</when>
	  			<otherwise>
	  				name
	  			</otherwise>
	  		</choose>
	  	</sql>
	  	
	  	<select id="getTotal" parameterType="Pager" resultType="Long">
	  		<bind name="pattern" value="'%'+_parameter.getSearch()+'%'"/> <!-- mybatis에서 제공하는 동적 쿼리를 이용하는 방식 _parameter는 parameter로 접근하는 예약어-->
	  		SELECT COUNT(CUSTOMERNO) FROM CUSTOMER
	  			WHERE <include refid="forPager"></include>
	  			Like #{pattern}
	  	</select>
		
		<!-- 고객목록 -->
		<select id="getList" parameterType="Pager" resultType="CustomerVO">
			SELECT * FROM CUSTOMER 
				WHERE
				<include refid="forPager"></include>
				LIKE CONCAT('%', #{search}, '%')
				ORDER BY CUSTOMERNO DESC
				LIMIT #{startRow}, #{lastRow}
		</select>
		
		<!-- 고객추가 -->
		<insert id="setAdd" parameterType="CustomerVO" useGeneratedKeys="true" keyProperty="customerNo">
			INSERT INTO CUSTOMER(CUSTOMERNO, ANIMALNAME, GENDER, AGE, WEIGHT, KIND, NEUTERING, NAME, PHONE, ADDRESS)
				VALUES (NULL, #{animalName}, #{gender}, #{age}, #{weight}, #{kind}, #{neutering}, #{name}, #{phone}, #{address}) 
		</insert>
		
		<!-- 사진첨부 -->
		<insert id="setFileAdd" parameterType="CustomerFileVO">
			INSERT INTO CUSTOMERFILE (FILENO, FILENAME, ORIGINALFILENAME, CUSTOMERNO)
				VALUES (#{fileNo}, #{fileName}, #{originalFileName}, #{customerNo})
		</insert>
		
		<!-- 고객상세 -->
		<select id="getDetail" parameterType="CustomerVO" resultMap="getDetailResult">
			SELECT C.*, CF.*
				FROM CUSTOMER C
					LEFT OUTER JOIN CUSTOMERFILE CF
					ON C.CUSTOMERNO = CF.CUSTOMERNO
				WHERE C.CUSTOMERNO = #{customerNo} 
		</select>
		
		<resultMap type="CustomerVO" id="getDetailResult">
			<id column="CUSTOMERNO" property="customerNo"/>
			<result column="ANIMALNAME" property="animalName"/>
			<result column="GENDER" property="gender"/>
			<result column="AGE" property="age"/>
			<result column="WEIGHT" property="weight"/>
			<result column="KIND" property="kind"/>
			<result column="NEUTERING" property="neutering"/>
			<result column="NAME" property="name"/>
			<result column="PHONE" property="phone"/>
			<result column="ADDRESS" property="address"/>
			<collection property="fileVO" javaType="java.util.List" ofType="CustomerFileVO">
				<id column="FILENO" property="fileNo"/>
				<result column="FILENAME" property="fileName"/>
				<result column="ORIGINALFILENAME" property="originalFileName"/>
			</collection>
		</resultMap>
		
		<!-- 고객수정 -->
		<update id="setUpdate" parameterType="CustomerVO">
			UPDATE CUSTOMER SET
				AGE = #{age},
				NEUTERING = #{neutering},
				WEIGHT = #{weight},
				NAME = #{name},
				PHONE = #{phone},
				ADDRESS = #{address}
			WHERE CUSTOMERNO = #{customerNo}
		</update>
		
		<!-- 고객삭제 -->
		<delete id="setDelete" parameterType="CustomerVO">
			DELETE FROM CUSTOMER WHERE CUSTOMERNO = #{customerNo}
		</delete>
				
		<select id="getFileDelete" parameterType="CustomerVO" resultType="CustomerFileVO">
			SELECT * FROM CUSTOMERFILE WHERE CUSTOMERNO = #{customerNo}
		</select>
		
		<!-- 사진삭제 -->
		<delete id="fileUpdateDelete" parameterType="CustomerFileVO">
			DELETE FROM CUSTOMERFILE WHERE FILENO = #{fileNo}
		</delete>
		
	</mapper>