<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.vet.main.emp.EmpDAO">
	
	<sql id="forPager">
	  	<choose>
	  		<when test="kind == 'empName'">
	  			empName
	  		</when>
	  		<when test="kind == 'state'">
	  			state
	  		</when>
	  		<otherwise>
	 			username
	  		</otherwise>
	  	</choose>
	  </sql>
	
	<select id="getTotal" parameterType="Pager" resultType="Long">
	  	<bind name="pattern" value="'%'+_parameter.getSearch()+'%'"/> <!-- mybatis에서 제공하는 동적 쿼리를 이용하는 방식 _parameter는 parameter로 접근하는 예약어-->
	  	SELECT COUNT(E.USERNAME) FROM EMP E INNER JOIN DEPARTMENT D ON E.DEPTNO = D.DEPTNO INNER JOIN POSITION P ON E.POSITIONNO = P.POSITIONNO
	  		WHERE E.DEPTNO != 0 AND <include refid="forPager"></include>
	  		Like #{pattern}
	  </select>
	
	<select id="getEmp" parameterType="String" resultMap="getLoginResult">
		SELECT E.*,MR.*,R.*,P.POSITIONNAME,D.DEPTNAME
		FROM EMP E INNER JOIN EMP_ROLE MR
		ON E.USERNAME = MR.USERNAME
		INNER JOIN ROLE R 
		ON MR.ROLENUM = R.ROLENUM
		INNER JOIN POSITION P
		ON E.POSITIONNO = P.POSITIONNO
		INNER JOIN DEPARTMENT D
		ON E.DEPTNO = D.DEPTNO
		WHERE E.USERNAME=#{username}
	</select>

	<select id="getLogin" parameterType="String" resultMap="getLoginResult">
		SELECT E.*,MR.*,R.*,P.POSITIONNAME,D.DEPTNAME
		FROM EMP E INNER JOIN EMP_ROLE MR
		ON E.USERNAME = MR.USERNAME
		INNER JOIN ROLE R 
		ON MR.ROLENUM = R.ROLENUM
		INNER JOIN POSITION P
		ON E.POSITIONNO = P.POSITIONNO
		INNER JOIN DEPARTMENT D
		ON E.DEPTNO = D.DEPTNO
		WHERE E.USERNAME=#{username}
	</select>

	<resultMap type="com.vet.main.emp.EmpVO" id="getLoginResult">
		<id column="USERNAME" property="username"/>
		<result column="PASSWORD" property="password"/>
		<result column="EMPNAME" property="empName"/>
		<result column="EMAIL" property="email"/>
		<result column="PHONE" property="phone"/>
		<result column="ADDRESS" property="address"/>
		<result column="HIREDATE" property="hireDate"/>
		<result column="RANDOMPW" property="randomPw"/>
		<result column="FILENAME" property="fileName"/>
		<result column="ORIGINALFILENAME" property="originalFileName"/>
		<result column="STATE" property="state"/>
		<result column="POSITIONNO" property="positionNo"/>
		<result column="DEPTNO" property="deptNo"/>
		<result column="BIRTH" property="birth"/>
		<result column="RANDOMPW" property="randomPw"/>
		<result column="POSITIONNAME" property="positionName"/>
		<result column="DEPTNAME" property="deptName"/>
		<collection property="roleVOs" javaType="List" ofType="com.vet.main.emp.RoleVO">
			<id column="ROLENUM" property="roleNum"/>
			<result column="ROLENAME" property="roleName"/>	
		</collection>
		
	</resultMap>
	

	<select id="mypage" parameterType="com.vet.main.emp.EmpVO" resultMap="getDetailResult">
  		SELECT E.*, P.*, D.* 
		FROM EMP E INNER JOIN POSITION P 
		ON E.POSITIONNO=P.POSITIONNO 
		INNER JOIN DEPARTMENT D 
		ON E.DEPTNO=D.DEPTNO
		WHERE E.USERNAME=#{username}
  	</select>

	<select id="empList" parameterType="com.vet.main.emp.EmpVO" resultMap="getDetailResult">
		SELECT E.*, P.*, D.*  
		FROM EMP E INNER JOIN POSITION P 
		ON E.POSITIONNO=P.POSITIONNO 
		INNER JOIN DEPARTMENT D 
		ON E.DEPTNO=D.DEPTNO
		WHERE P.POSITIONNO!=1 AND
		<include refid="forPager"></include>
			LIKE CONCAT('%', #{search}, '%')
			ORDER BY E.USERNAME DESC
			LIMIT #{startRow}, #{perPage}
	</select>
	
	<resultMap type="com.vet.main.emp.EmpVO" id="getDetailResult">
		<id column="USERNAME" property="username"/>
		<result column="PASSWORD" property="password"/>
		<result column="EMPNAME" property="empName"/>
		<result column="EMAIL" property="email"/>
		<result column="PHONE" property="phone"/>
		<result column="HIREDATE" property="hireDate"/>
		<result column="RANDOMPW" property="randomPw"/>
		<result column="FILENAME" property="fileName"/>
		<result column="ORIGINALFILENAME" property="originalFileName"/>
		<result column="STATE" property="state"/>
		<result column="POSITIONNO" property="positionNo"/>
		<result column="DEPTNO" property="deptNo"/>
		<result column="BIRTH" property="birth"/>
		<result column="RANDOMPW" property="randomPw"/>
	</resultMap>


	<insert id="empAdd" parameterType="com.vet.main.emp.EmpVO">
	<selectKey keyProperty="username" resultType="string" order="BEFORE">
	        select NEXTVAL(emp_seq) from dual
	</selectKey>
		INSERT INTO EMP 
		VALUES (#{username}, #{password}, #{empName}, #{email}, #{phone}, NOW(), NULL, NULL, 12, 999, '재직', #{birth}, 0)
	</insert>

	<insert id="empRole" parameterType="java.util.Map">
		INSERT INTO EMP_ROLE
		VALUES(#{username}, #{roleNum})
	</insert>

  	<select id="empDetail" parameterType="com.vet.main.emp.EmpVO" resultMap="getDetailResult">
  		SELECT E.*, P.*, D.* 
		FROM EMP E INNER JOIN POSITION P 
		ON E.POSITIONNO=P.POSITIONNO 
		INNER JOIN DEPARTMENT D 
		ON E.DEPTNO=D.DEPTNO
		WHERE E.USERNAME=#{username}
  	</select>
  	
  	<update id="empUpdate" parameterType="com.vet.main.emp.EmpVO">
  		UPDATE EMP E JOIN DEPARTMENT D
  		ON E.DEPTNO = D.DEPTNO
  		JOIN POSITION P
  		ON E.POSITIONNO = P.POSITIONNO
  		SET
  		E.EMPNAME = #{empName},
  		E.DEPTNO = #{deptNo},
  		E.POSITIONNO = #{positionNo},
  		E.STATE = #{state}
  		WHERE E.USERNAME=#{username}	
  	</update>
  	<select id="searchId" parameterType="com.vet.main.emp.EmpVO" resultType="String">
  		SELECT USERNAME FROM EMP WHERE EMPNAME = #{empName} AND EMAIL = #{email}
  	</select>
  	<update id="pwUpdate" parameterType="com.vet.main.emp.EmpVO">
  		UPDATE EMP 
  		SET
  		PASSWORD = #{password},
  		RANDOMPW = 1	
  		WHERE USERNAME=#{username}
  	</update>
  	
  	<select id="pwdCheck" resultType="Integer">
  		SELECT COUNT(*) 
  		FROM EMP
  		WHERE USERNAME = #{username} and EMPNAME = #{empName} and EMAIL = #{email}
  	</select>
  	
  	  <update id="mypageUpdate" parameterType="com.vet.main.emp.EmpVO">
  		UPDATE EMP
  		SET
  		EMAIL = #{email},
  		PHONE = #{phone},
  		ORIGINALFILENAME = #{originalFileName},
  		FILENAME = #{fileName}
  		WHERE USERNAME=#{username}		
  	</update>
  	
  	<select id="getDeptNo" parameterType="com.vet.main.emp.EmpVO">
		SELECT *
		FROM DEPARTMENT
		WHERE PARENTNO != 0	|| DEPTNO = 999
	</select>
	
  	 <select id="getPositionNo" parameterType="com.vet.main.emp.EmpVO">
		SELECT *
		FROM DEPARTMENT D INNER JOIN POSITION P
		ON D.DEPTNO = P.DEPTNO	
	</select>
</mapper>